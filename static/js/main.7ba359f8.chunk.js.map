{"version":3,"sources":["App.tsx","components/GoodList.tsx","index.tsx"],"names":["SortType","GoodList","goods","map","good","goodsFromServer","App","useState","empty","sortType","setSortType","isReversed","setIsReversed","sortedList","preparedGoods","sort","a","b","alphabetically","localeCompare","length","reverse","getPreparedGoods","className","onClick","type","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0DCZQC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,SDJFC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,iBAAAA,I,mBAAAA,I,oCAAAA,M,KAmCE,IAAMM,EAAgB,WAC3B,MAAgCC,mBAASP,EAASQ,OAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAhCR,SACEX,EACAS,EACAF,GAEA,IAAMK,EAAa,YAAOZ,GAqB1B,OAnBIO,GACFK,EAAcC,MAAK,SAACC,EAAGC,GACrB,OAAQR,GACN,KAAKT,EAASkB,eACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKjB,EAASoB,OACZ,OAAOJ,EAAEI,OAASH,EAAEG,OAEtB,QACE,OAAO,MAKXT,GACFG,EAAcO,UAGTP,EAMYQ,CACjBjB,EACAM,EACAF,GAQF,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,WACPd,EAAYV,EAASkB,iBAEvBO,KAAK,SACLF,UAAS,yBAAoBd,IAAaT,EAASkB,gBAAmB,YALxE,iCAUA,wBACEM,QAAS,WACPd,EAAYV,EAASoB,SAEvBK,KAAK,SACLF,UAAS,4BAAuBd,IAAaT,EAASoB,QAAW,YALnE,4BAUA,wBACEI,QAAS,WACPZ,GAAeD,IAEjBc,KAAK,SACLF,UAAS,6BAAwBZ,GAAe,YALlD,sBAUEF,GAAYE,IACZ,wBACEa,QAxCW,WACnBd,EAAYV,EAASQ,OACrBI,GAAc,IAuCNa,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,cAAC,EAAD,CAAUrB,MAAOW,QE7GvBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7ba359f8.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodList } from './components/GoodList';\nimport { Goods } from './Goods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  empty,\n  length,\n  alphabetically,\n}\n\nfunction getPreparedGoods(\n  goods: Goods,\n  isReversed: boolean,\n  sortType: SortType,\n) {\n  const preparedGoods = [...goods];\n\n  if (sortType) {\n    preparedGoods.sort((a, b) => {\n      switch (sortType) {\n        case SortType.alphabetically:\n          return a.localeCompare(b);\n\n        case SortType.length:\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.empty);\n  const [isReversed, setIsReversed] = useState(false);\n  const sortedList = getPreparedGoods(\n    goodsFromServer,\n    isReversed,\n    sortType,\n  );\n\n  const resetChanges = () => {\n    setSortType(SortType.empty);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => {\n            setSortType(SortType.alphabetically);\n          }}\n          type=\"button\"\n          className={`button is-info ${sortType !== SortType.alphabetically && ('is-light')}`}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => {\n            setSortType(SortType.length);\n          }}\n          type=\"button\"\n          className={`button is-success ${sortType !== SortType.length && ('is-light')}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => {\n            setIsReversed(!isReversed);\n          }}\n          type=\"button\"\n          className={`button is-warning ${!isReversed && ('is-light')}`}\n        >\n          Reverse\n        </button>\n\n        {(sortType || isReversed) && (\n          <button\n            onClick={resetChanges}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={sortedList} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Goods } from '../Goods';\n\ntype Props = {\n  goods: Goods;\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good} data-cy=\"Good\">{good}</li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}